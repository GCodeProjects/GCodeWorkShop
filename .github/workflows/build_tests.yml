name: build tests

on:
  push:
    branches-ignore:
      - master
    tags-ignore:
  pull_request:

env:
  ACTIONS_ALLOW_UNSECURE_COMMANDS: true

jobs:
  build:
    name: ${{ matrix.config.name }}-Qt${{ matrix.qt.version}}
    runs-on: ${{ matrix.config.os }}
    #continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        qt:
        - {
            version:  5.15.*,
            archives: icu qtbase qtprintsupport qtnetwork qttools qttranslations qtserialport,
            modules:  ""
          }
        - {
            # https://doc.qt.io/qt.html
            version:    6.2.*,
            archives:   icu qtbase qtprintsupport qtnetwork qttools qttranslations,
            modules:    qtserialport qt5compat
          }
        config:
        - {
            name:     Win_x64,
            os:       windows-2019,
            q_extra:  "",
            build:    nmake
          }
        - {
            name:     Linux_x64,
            os:       ubuntu-22.04,
            q_extra:  "",
            build:    make
          }
        - {
            name:     macOS_x64,
            os:       macos-13,
            # https://stackoverflow.com/a/77631382
            q_extra:  "-early QMAKE_DEFAULT_LIBDIRS=$(xcrun -show-sdk-path)/usr/lib",
            build:    make
          }

    steps:
    - name: checkout
      uses: actions/checkout@v4

    - name: MSVC Environment Setup
      if: contains( matrix.config.os, 'Windows' )
      uses: ilammy/msvc-dev-cmd@v1

    - name: Install Qt
      uses: jurplel/install-qt-action@v4
      with:
        cache: true
        version:  ${{ matrix.qt.version}}
        archives: ${{ matrix.qt.archives}}
        modules: ${{ matrix.qt.modules}}

    - name: Setup project
      run: qmake -recursive CONFIG+=debug ${{ matrix.config.q_extra }}

    - name: Build project
      run: ${{ matrix.config.build }}
